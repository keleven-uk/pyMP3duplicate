V1.1.5

    Added custom exception, held in myException.py, which is raised when the tag read has failed.
    Added a check for fale positives when matching the tags using Soundex.
      A count of sutch will be displayed at the end of the run.
    Added to the removeThe function to return "" if name is blank.
      i.e. the artist ot title tag is blank or failed to read.
V1.1.4

    Added the ability to match the song artist / title using the Soundex algorithm, to add a sort of
    fuzzy matching.  Also, the matching is done with lower case strings.
      i.e Led Zeppelin should match Led Zeplin.


V1.1.3

    Added two new config options name and locations of the database, used in loading and saving.
    If the config file is absent, or can't be read, a default one is created and used.
    When checking the artist and song title, if they start with 'the' this is ignored.
      i.e.Sweet will match with both Sweet and The Sweet.
    Added the ability to amend to previous duplicate text file or create a new one.


V1.1.2

    Added requirments.txt - to install dependences pip -r requirments.txt.
    Added ignore song count, if not using mutagen.


V1.1.1

    Added the ability to read the mp3 tags using mutagen.
    Added the ability to ignore certain duplicates files, these may be files with the same
      artist, title and duration [or close] but are in fact not the same track.
      This is achieved by manually inserting a new DUPLICATE tag into each song.
      Mutagen allows this extra tags to be read and thus ignored.
      The ignore tag can be set in user config file.
      The ignore flag [if present or blank] is saved in the song library.

      Tinytag is the fastest, but read only.
      Eyed3 is the next fastest - looks about 3 times slower then Tinytag.
      Mutagen is the slowest, needs to read the song twice - about five time slower then Tinytag.


V1.1.0

    Added the ability to use different modules to read the mp3 tags.
      Currently tinytag & eyed3 are supported.  [eyed3 could be used to write tags]
      A configuration option was added to specify winch to use.
      Alterations to pyMP3Duplicate.py by above [added method scanTags].


V1.0.9

    Amended the option -v, print the version.  This is now handled the same -l for license.
    The short version of licence is also not printed with the version info.


V1.0.8

    Added tqdm - a very cool progress bar for console windows.
      Both countSongs and scannMusic loop now display a progress bar.
      Changed back to glob from os.walk, works better with tqdm.
    Added method countSongs to give total to above.
    Removed printing to screen every n iterations of loop,
      not now needed with progress bar.


V1.0.7

    Added two new files.
      myLibrary - a wrapper around dictionary access, used to store song stuff.
      myLicense - holds the print stuff for short license and long license.
    Alterations to pyMP3Duplicate.py by above.


V1.0.6

    Added a toml config file and a wrapper class in myConfig.py.
      The config only holds contents of _version.py i.e.
      application name and version at the moment.
    _version.py removed.
    Alterations to myLogger.py caused by above.
    Alterations to pyMP3Duplicate.py by above.
    Combined the two methods buildDataBase and scanMusic.
      Almost identical except for the test for duplicates.


V1.0.5

    Changed main loop in scanMusic to os.walk from glob.
      Using os.walk seems faster but only just slightly.
      But gives extra functionality, non music files can be flagged
    Some code clean up.


V1.0.4

    Added an argument to get the time difference, defaults to 0.5s.
    Getting error when writing some paths to the duplicate file,
      'charmap' codec can't encode character '\u03b8'.
      Adding the encoding flag cured this,
    Open(duplicateFile, encoding='utf-8', mode="a")
      Changed the name of the method addKey to addItem.


V1.0.3

    Getting strange errors when trying to print song paths, they where of
      type pathlib.path, now they are all cast to str.
    Getting errors when one of the song lengths was not set, now set to zero
      before doing comparisons.


V1.0.2

    Added an argument to not load the database.
    Added an argument to not save the database.
    Added an argument to build the database only.

V1.0.1

    Added methods to save and load the songLibrary - pickles a directory.
    Added an argument to print the number of songs.
    Added an argument to save output to a file supplied.
    Added an argument to not load database on start. i.e. create new one.


V1.0.0

    basic program completed.
    The program will scan a given directory and report duplicate MP3 files.
