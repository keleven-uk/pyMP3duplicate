V2020.19

    In myconfig.py -
        Added exception toml.TomlDecodeErrror or load routine.
        Made all methods read only propertys.
        Added a header to the writeDefaultConfig methond.
    In myLibrary.py -
        The library filename and format is now passed to class on initialation.
        The means this information does not have to be passed to each method.
        noOfItems methon is now a property.
        Bugs fixed in check, load & save methods.
    In pyMP3duplicates.py -
        Changes to call class methods as propertys.
        Build mode should now work [I Think].


V2020.18

    Added config option to either save song library in pickle or json format.
    In myConfig.py -
        Returns library format.
        The extension of the filename is now taken from the library format.
    In myLibrary.py -
        Added private methods to handle the load and save in both pickle and json.
        Amended save and load method to pick depending upon library format.
        Amended noOfItems to check if library already loaded.
    In pyMP3duplicates.py -
        Ignore files of type .json from scan.
        Amended several method call to include library format.


V2020.l7.f9f7e74

    In myConfig.py -
      Wrapped the loading and saving of the config file in a context manager.
    In myLibrary.py -
      Handled filename using pathlib i.e. used path exists instead of os.path.isfile().
      Also added count of deleted songs.
    In pyMP3duplicate.py -
      Used pathlib suffix instead of casting path to string and using endswith.
      Also used path name instead of casting to string in print statements.
      Corrected bug in calling of printNumberOfSongs()


V2020.16.b874ea8

    Changed format of version number - now is year.build number.7 digit git commit ID
    Added a data integrity check for the database[Song Library].
      With a delete option that will prune the database.
    Added a method the delete a library entry.  This a private method.
    Added an command line option to call the data integrity check.


V2020.15.b7a2f28

    Added custom exception, held in myException.py, which is raised when the tag read has failed.
    Added a check for false positives when matching the tags using Soundex.
      A count of such will be displayed at the end of the run.
    Added to the removeThe function to return "" if name is blank.
      i.e. the artist or title tag is blank or failed to read.


V2020.14.4c4fd39

    Added the ability to match the song artist / title using the Soundex algorithm, to add a sort of
    fuzzy matching.  Also, the matching is done with lower case strings.
      i.e Led Zeppelin should match Led Zeplin.


V2020.13.e2d3a0f

    Added two new config options name and locations of the database, used in loading and saving.
    If the config file is absent, or can't be read, a default one is created and used.
    When checking the artist and song title, if they start with 'the' this is ignored.
      i.e.Sweet will match with both Sweet and The Sweet.
    Added the ability to amend to previous duplicate text file or create a new one.


V2020.12.8f4d74e

    Added requirments.txt - to install dependences pip -r requirments.txt.
    Added ignore song count, if not using mutagen.


V2020.11.b4ee2ae

    Added the ability to read the mp3 tags using mutagen.
    Added the ability to ignore certain duplicates files, these may be files with the same
      artist, title and duration [or close] but are in fact not the same track.
      This is achieved by manually inserting a new DUPLICATE tag into each song.
      Mutagen allows this extra tags to be read and thus ignored.
      The ignore tag can be set in user config file.
      The ignore flag [if present or blank] is saved in the song library.

      Tinytag is the fastest, but read only.
      Eyed3 is the next fastest - looks about 3 times slower then Tinytag.
      Mutagen is the slowest, needs to read the song twice - about five time slower then Tinytag.


V2020.10.43df053

    Added the ability to use different modules to read the mp3 tags.
      Currently tinytag & eyed3 are supported.  [eyed3 could be used to write tags]
      A configuration option was added to specify winch to use.
      Alterations to pyMP3Duplicate.py by above [added method scanTags].


V2020.9.b6dee92

    Added tqdm - a very cool progress bar for console windows.
      Both countSongs and scannMusic loop now display a progress bar.
      Changed back to glob from os.walk, works better with tqdm.
    Added method countSongs to give total to above.
    Removed printing to screen every n iterations of loop,
      not now needed with progress bar.


V2020.8.91ee2f4

    Added two new files.
      myLibrary - a wrapper around dictionary access, used to store song stuff.
      myLicense - holds the print stuff for short license and long license.
    Alterations to pyMP3Duplicate.py by above.


V2020.7.a971b19

    Added a toml config file and a wrapper class in myConfig.py.
      The config only holds contents of _version.py i.e.
      application name and version at the moment.
    _version.py removed.
    Alterations to myLogger.py caused by above.
    Alterations to pyMP3Duplicate.py by above.
    Combined the two methods buildDataBase and scanMusic.
      Almost identical except for the test for duplicates.


V2020.6.68a5941

    Changed main loop in scanMusic to os.walk from glob.
      Using os.walk seems faster but only just slightly.
      But gives extra functionality, non music files can be flagged
    Some code clean up.


V2020.5.4e0b3d8

    Added an argument to get the time difference, defaults to 0.5s.
    Getting error when writing some paths to the duplicate file,
      'charmap' codec can't encode character '\u03b8'.
      Adding the encoding flag cured this,
    Open(duplicateFile, encoding='utf-8', mode="a")
      Changed the name of the method addKey to addItem.


V2020.4.7215ad0

    Getting strange errors when trying to print song paths, they where of
      type pathlib.path, now they are all cast to str.
    Getting errors when one of the song lengths was not set, now set to zero
      before doing comparisons.


V2020.3.66f1e24

    Added an argument to not load the database.
    Added an argument to not save the database.
    Added an argument to build the database only.


V2020.2.29b90d8

    Added methods to save and load the songLibrary - pickles a directory.
    Added an argument to print the number of songs.
    Added an argument to save output to a file supplied.
    Added an argument to not load database on start. i.e. create new one.


V2020.1.299bd44

    basic program completed.
    The program will scan a given directory and report duplicate MP3 files.
