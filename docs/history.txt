** all builds are to the master branch, unless stated. **


V2022.43

    The library self check now uses the time class form src/Timer.
    Python version is nor saves to logger file.
    Copyright years updated on source files.


V2022.42

    Main changes due to testing the use of auto-py-to-exe [pip install auto-py-to-exe]
        Added file pyMP3duplicateInstall.json, saved setting for the app.
        The app creates a standalone on file executable of pyMP3duplicate.
    Changes to pyMP3duplicate.py, so if run as a frozen executable
        then all data files etc are in the same directory.
    Changes to src\Library.py to raise an exception if the date file does not exist.
    Changes to src\utils\duplicateUtils.py to catch above exceptions and report error.
    Changed exit(0) to sys.exit(0) in src\args.py


V2021.41.ccf1166

	Commit after merge.
	Corrected a bug on calling file explorer as a argument.


V2021.41.262a31c

    Merged branch python_3.10 back into master


V2021.40.7fa8043    [branch python_3.10]

    Test against Python 3.10.1
    More attempts at formatting README.md


V2021.39.cba8694    [branch python_3.10]

    Refactoring continues.
    Removed my from all src\my*.py.
        Amended all files to reflect this.
    Moved the parseArgs function to it's own file src\arg.py
    Added the argument logger=None to src\Library.py\check/
        If a logger is supplied, log progress of database check.
    Added the argument logger=None to src\utils\duplicateUtils\logTextLine.
        If a logger is supplied, log test as well as print to screen.
    Added the argument logger=None to src\utils\tagUtils\checktags.
    Removed stuff from main program which now resides in src\ modules.
    Added commands.text - example usage.


V2021.38.4af1c6e    [branch python_3.10]

    Added a test directory.
    Added two test files test_duplicateUtils.py & test_myLibrary.py.
        Both to be run with pytest.
    Moved the functions checkTags() & scanTags() to tagUtils.py in src/ustils.
    Moved function createKey() & checkToIgnore() to duplicateUtils.py
    Moved function logTextLine() from MyLicense to duplicate.py
    In MyLibrary amended getItem() to raise an exception if item not found.
    In MyLibrary amended delItem() to raise an exception if item not found.
    In MyLibrary added clear() to clear all items from the library.
    In MyLibrary amended the load routines, they now return an empty library
        if not file found.

    ---------------------------------------------------------------------------------------------
    File                                                      blank        comment           code
    ---------------------------------------------------------------------------------------------
    pyMP3duplicate\pyMP3duplicate.py                             61             53            238
    pyMP3duplicate\src\myLibrary.py                              39             77            106
    pyMP3duplicate\test\test_myLibrary.py                        28             27            101
    pyMP3duplicate\src\myConfig.py                               34             68             99
    pyMP3duplicate\src\utils\tagUtils.py                         12             30             68
    pyMP3duplicate\src\utils\zapUtils.py                         18             32             52
    pyMP3duplicate\src\utils\duplicateUtils.py                   15             45             34
    pyMP3duplicate\src\myTimer.py                                16             40             32
    pyMP3duplicate\src\myExceptions.py                            6             20             22
    pyMP3duplicate\config.toml                                    6              7             19
    pyMP3duplicate\src\myLogger.py                                8             29             18
    pyMP3duplicate\src\myLicense.py                               5             35             15
    pyMP3duplicate\test\test_duplicateUtils.py                    4             19              8
    ---------------------------------------------------------------------------------------------
    SUM:                                                        252            482            812
    ---------------------------------------------------------------------------------------------


V2021.37.03fe489    [branch python_3.10]

    Renamed Lib directory to src.
    Created a new directory utils under src.
    Moved the functions removeThe(). trailingThe(), createKey() & loadExplorer()
        to src\utils\duplicateUtils.py
    Moved the functions removeUnwanted(),zapEmptryDir() & zapFile()
        to src\utils\zapUtils.py
    Amended the main scripts to import and call the new utils functions.


V2021.36    [branch python_3.10]

    Added an option to check the artist field for trailing 'the'
        i.e.  "Shadows, The" instead of "The Shadows".
    If one is found an entry is either printed to screen or added to duplicate file.


V2021.35.480171f.abc9f84    [branch python_3.10]

	Tried to make the directory structure less cluttered.
	It now look like this

	config.toml
	LICENCE.txt
	README.md
	requirements.txt
	data\
	  |  dup.pickle			    [database file, not git tracked]
	  |  pyMP3duplicate.log		[logging file,  not git tracked]
	docs\
	  |  help\
	  |  history.txt
	Lib\
	  |  __init__.py
	  |  myConfig.py
	  |  myExceptions.py
	  |  myLibrary.py
	  |  myLicense.py
	  |  myLogger.py
	  |  myTimer.py
	resources\
	  |  tea.icon


V2021.34.432ca60    [branch python_3.10]

    Made changes from build 33 below to the python_3.10 branch.
    Tried pyjion to test for increase in speed - seems to be very small.
    Amended countSongs to build a list of filenames, so this can be passed to scanMusic.
        This was an attempt to increase the speed, eliminating a second file system scan.
    Moved the deletion of empty directories and non music file into the same function - removeUnwanted.
        This is not called after scanMusic and not from within.
        This was done to clean up the logic and the calling of scanMusic.
    Updated README.md


V2021.33.2140d3f.1e93bb

    When upgraded Tinytag to V1.6, it started throwing errors that it can't read some ID3 tags.
    This crashed the program.  Added try except clauses to the scanTags function to catch these.
    The error look like internal to Tinytag, I was just not catching them.
    Added a try except to the calling of scantags, to I can pass to next next music
    file if an error is found.
    Also added a try except clause to the removeEmptryDir function.


V2021.32.2140d3f    [branch python_3.10]

    Created branch python_3.10, to test Python V3.10
    Amended pyMP3Duplicate.py to use the new match [case] statement instead of
    multiple if's in the scanTags function.
    Upgraded all packages to test on V3.10 - all seem to work.


V2021.31.f554fea

    Amended the -v version to also show Python version.
        Need to import sys.
    Cleaned up requirements.txt
    Moved the call to parseArgs() to earlier in the main code.

    -----------------------------------------------------------------------------------
    File                                            blank        comment           code
    -----------------------------------------------------------------------------------
    pyMP3duplicate\pyMP3duplicate.py                   84             99            357
    pyMP3duplicate\myLibrary.py                        35             73            100
    pyMP3duplicate\myConfig.py                         34             68             99
    pyMP3duplicate\myTimer.py                          16             40             32
    pyMP3duplicate\myLicense.py                         8             39             20
    pyMP3duplicate\config.toml                          6              7             19
    pyMP3duplicate\myLogger.py                          8             29             18
    pyMP3duplicate\myExceptions.py                      3             20             11
    -----------------------------------------------------------------------------------
    SUM:                                              194            375            656
    -----------------------------------------------------------------------------------
    stats by cloc

V2021.30.0723d68

    Switched to alive_bar instead of tqdm for progress bar.
        Added to requirements.txt.git add .
    Some more code formatting improvements, similar to below.
    Amended the -v version to also show Python version.


V2021.29.4ff0f2d

    In pyMP3duplicate.py
        RemoveEmptyDir is now only performed in scan mode.
        Added -e option, Load program working directory into file explorer.
            I find this useful :-)
        Corrected bug, where the zap option was not been passed in build mode.
    Amended all copyright to be 2020-2021.


V2020.28.568b231

    Corrected bug, if the music file was a non music file and delete is chosen.
    Certain directories that contain a period could also be deleted.  [i.e. Dr.John].
    Added a check so that directories are ignored.


V2020.27.2029586

    Added user option emptyDir, which will find and delete empty directories.
    This is only active is -zD option is used.
    In myConfig.py
        Added the property, EMPTY_DIR, is set then empty directories
        are found and deleted.
    In pyMP3duplicate.py
        Tried to make try blocks more descriptive.
        Changes to call removeEmptyDir() is needed.
        More changes to format code.
            [But I like my equal symbols, comments and imports to line up.]


V2020.26.8d33ed9

    Some of the imports haven't made V3.9 yet, so still using V3.8 - oh hum.
    Renamed requirments.txt to requirements.txt, I had spelt it wrong.
    Added pyCharm project files.
    Added the option to delete non music files [-zD].
    In myConfig.py
        Added the property, ZAP_RECYCLE, if set then the zap option uses the
        recycle bin otherwise plain delete.  This is called by the argument -zD
    In pyMP3duplicate.py
        now import the library send2trash [requirements.txt updated]
        Implemented the option to delete none music files.
        This either to the recycle bin or not, depending upon above option.
        Started to format code using pyCharm.

v2020.25.931da7a

    Renamed LICENSE to LICENSE.txt
    To make sure all code has been committed, upgrade to python V3.9


V2020.24.ee3b4db

    In myConfig.py
        Added the property, NOTIFICATION, if set then system tray notification will be displayed
        at the start and end of the program [and any other times I think will be useful].
    In pyMP3duplicate.py
        Changes to implement the option NOTIFICATION.
        More changes to the scan / mode mode thing.
        Corrected a bug if the path to duplicate file is nonsense, the file will be created if does not exist.
    Added an Icon to be used with notifications.
    Added plyer to requirements.txt [for Notifications.]


V2020.23.d06085a

    In myConfig.py
        Added the property, DB_OVERWRITE, if set to False a backup of the database file is made.
            The option also added to config.toml.
        Finished off the property DB_LOCATION.  This was set but never implemented.
    In myLibrary.py
        Added the method DBOverWrite, which is set to DB_OVERWRITE from MyConfig.
            The save methods where amended to check if file exits and to copy the
            original out of the way if needed.  It date stamps the backup copy.
    In pyMP3duplicate.py
        Changes to implement the option DB_OVERWRITE.
        Corrected a small bug when a non music file was uncounted.

        -----------------------------------------------------------------------------------
        File                                            blank        comment           code
        -----------------------------------------------------------------------------------
        pyMP3duplicate\pyMP3duplicate.py		64             84            279
        pyMP3duplicate\myLibrary.py			    35             72            100
        pyMP3duplicate\myConfig.py			    39             60             87
        pyMP3duplicate\myTimer.py			    16             40             32
        pyMP3duplicate\myLicense.py			     8             39             20
        pyMP3duplicate\myLogger.py			     8             29             18
        pyMP3duplicate\config.toml			     4              7             14
        pyMP3duplicate\myExceptions.py	         3             20             11
        -----------------------------------------------------------------------------------
        SUM:						           177            351            561
        -----------------------------------------------------------------------------------

V2020.22.30f9a16

    In pyMP3duplicates.py -
        Added option to not print "Possible False Positive" items.
    Added Eric6 project files.
    Cleaned up code and licence text.


V2020.21.5e81399

    In myTimer.py -
        Added public method the format seconds into hh:mm:ss format.
        Amended all methods to use above [also used in pyMP3duplicate.py].
    Added .gitattributes, so github would correctly identify project as python.


V2020.20.4cf55b6

    Added myTimer.py - A timer class that tidies up the timing of the program.
    Changes in pyMP3duplicates.py to accommodate the new timer.
    First attempts at a help manual.


V2020.19.a2c0ef7

    In myconfig.py -
        Added exception toml.TomlDecodeErrror or load routine.
        Made all methods read only property's.
        Added a header to the writeDefaultConfig method.
    In myLibrary.py -
        The library filename and format is now passed to class on initialisation.
        The means this information does not have to be passed to each method.
        noOfItems method is now a property.
        Bugs fixed in check, load & save methods.
    In pyMP3duplicates.py -
        Changes to call class methods as property's.
        Build mode should now work [I Think].


V2020.18.86f6d02

    Added confiG option to either save song library in pickle or JSON format.
    In myConfig.py -
        Returns library format.
        The extension of the filename is now taken from the library format.
    In myLibrary.py -
        Added private methods to handle the load and save in both pickle and JSON.
        Amended save and load method to pick depending upon library format.
        Amended noOfItems to check if library already loaded.
    In pyMP3duplicates.py -
        Ignore files of type .JSON from scan.
        Amended several method call to include library format.


V2020.l7.f9f7e74

    In myConfig.py -
      Wrapped the loading and saving of the config file in a context manager.
    In myLibrary.py -
      Handled filename using pathlib i.e. used path exists instead of os.path.isfile().
      Also added count of deleted songs.
    In pyMP3duplicate.py -
      Used pathlib suffix instead of casting path to string and using endswith.
      Also used path name instead of casting to string in print statements.
      Corrected bug in calling of printNumberOfSongs()


V2020.16.b874ea8

    Changed format of version number - now is year.build number. [first] 7 digit git commit ID
    Added a data integrity check for the database[Song Library].
      With a delete option that will prune the database.
    Added a method the delete a library entry.  This a private method.
    Added an command line option to call the data integrity check.


V2020.15.b7a2f28

    Added custom exception, held in myException.py, which is raised when the tag read has failed.
    Added a check for false positives when matching the tags using Soundex.
      A count of such will be displayed at the end of the run.
    Added to the removeThe function to return "" if name is blank.
      i.e. the artist or title tag is blank or failed to read.


V2020.14.4c4fd39

    Added the ability to match the song artist / title using the Soundex algorithm, to add a sort of
    fuzzy matching.  Also, the matching is done with lower case strings.
      i.e Led Zeppelin should match Led Zeplin.


V2020.13.e2d3a0f

    Added two new config options name and locations of the database, used in loading and saving.
    If the config file is absent, or can't be read, a default one is created and used.
    When checking the artist and song title, if they start with 'the' this is ignored.
      i.e.Sweet will match with both Sweet and The Sweet.
    Added the ability to amend to previous duplicate text file or create a new one.


V2020.12.8f4d74e

    Added requirments.txt - to install dependences pip -r requirments.txt.
    Added ignore song count, if not using mutagen.


V2020.11.b4ee2ae

    Added the ability to read the mp3 tags using mutagen.
    Added the ability to ignore certain duplicates files, these may be files with the same
      artist, title and duration [or close] but are in fact not the same track.
      This is achieved by manually inserting a new DUPLICATE tag into each song.
      Mutagen allows this extra tags to be read and thus ignored.
      The ignore tag can be set in user config file.
      The ignore flag [if present or blank] is saved in the song library.

      Tinytag is the fastest, but read only.
      Eyed3 is the next fastest - looks about 3 times slower then Tinytag.
      Mutagen is the slowest, needs to read the song twice - about five time slower then Tinytag.


V2020.10.43df053

    Added the ability to use different modules to read the mp3 tags.
      Currently tinytag & eyed3 are supported.  [eyed3 could be used to write tags]
      A configuration option was added to specify winch to use.
      Alterations to pyMP3Duplicate.py by above [added method scanTags].


V2020.9.b6dee92

    Added tqdm - a very cool progress bar for console windows.
      Both countSongs and scannMusic loop now display a progress bar.
      Changed back to glob from os.walk, works better with tqdm.
    Added method countSongs to give total to above.
    Removed printing to screen every n iterations of loop,
      not now needed with progress bar.


V2020.8.91ee2f4

    Added two new files.
      myLibrary - a wrapper around dictionary access, used to store song stuff.
      myLicense - holds the print stuff for short license and long license.
    Alterations to pyMP3Duplicate.py by above.


V2020.7.a971b19

    Added a toml config file and a wrapper class in myConfig.py.
      The config only holds contents of _version.py i.e.
      application name and version at the moment.
    _version.py removed.
    Alterations to myLogger.py caused by above.
    Alterations to pyMP3Duplicate.py by above.
    Combined the two methods buildDataBase and scanMusic.
      Almost identical except for the test for duplicates.


V2020.6.68a5941

    Changed main loop in scanMusic to os.walk from glob.
      Using os.walk seems faster but only just slightly.
      But gives extra functionality, non music files can be flagged
    Some code clean up.


V2020.5.4e0b3d8

    Added an argument to get the time difference, defaults to 0.5s.
    Getting error when writing some paths to the duplicate file,
      'charmap' codec can't encode character '\u03b8'.
      Adding the encoding flag cured this,
    Open(duplicateFile, encoding='utf-8', mode="a")
      Changed the name of the method addKey to addItem.


V2020.4.7215ad0

    Getting strange errors when trying to print song paths, they where of
      type pathlib.path, now they are all cast to str.
    Getting errors when one of the song lengths was not set, now set to zero
      before doing comparisons.


V2020.3.66f1e24

    Added an argument to not load the database.
    Added an argument to not save the database.
    Added an argument to build the database only.


V2020.2.29b90d8

    Added methods to save and load the songLibrary - pickles a directory.
    Added an argument to print the number of songs.
    Added an argument to save output to a file supplied.
    Added an argument to not load database on start. i.e. create new one.


V2020.1.299bd44

    basic program completed.
    The program will scan a given directory and report duplicate MP3 files.
